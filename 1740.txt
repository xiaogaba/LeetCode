class Solution {
    
    public int findDistance(TreeNode root, int p, int q) {
        TreeNode res = LCA(root, p, q);
        return dist(res, p, 0) + dist(res, q, 0);
    }
    
    public TreeNode LCA(TreeNode root, int p, int q) {
        if (root == null || root.val == p || root.val == q) {
            return root;
        }
        TreeNode left = LCA(root.left, p, q);
        TreeNode right = LCA(root.right, p, q);
        if (left != null && right != null) {
            return root;
        }
        return left == null? right: left;
    }
    
    public int dist(TreeNode root, int p, int count) {
        if (root == null) {
            return -1;
        }
        if (root.val == p)
            return count;
        int leftSide = dist(root.left, p, count + 1);
        if (leftSide == -1) {
            return dist(root.right, p, count + 1);
        }
        return leftSide;
    }
}