class TrieNode {
    TrieNode[] children = new TrieNode[27];
    int weight = 0;
    public TrieNode() {}
};

class WordFilter {
    TrieNode root;
    public WordFilter(String[] words) {
        root = new TrieNode();
        for (int weight = 0; weight < words.length; weight++) {
            String word = "{" + words[weight];
            insert(word, weight);
            for (int i = 0; i < word.length(); i++) {
                insert(word.substring(i + 1) + word, weight);
            }
        }
    }
    
    public int f(String prefix, String suffix) {
        TrieNode cur = root;
        for (char c: (suffix + '{' + prefix).toCharArray()) {
            if (cur.children[c - 'a'] == null) {
                return -1;
            }
            cur = cur.children[c - 'a'];
        }
        return cur.weight;
    }
    
    public void insert(String str, int weight) {
        TrieNode p = root;
        for (char c: str.toCharArray()) {
            if (p.children[c - 'a'] == null) {
                p.children[c - 'a'] = new TrieNode();
            }
                
            p = p.children[c - 'a'];
            p.weight = weight;
        }
        
    }
}
